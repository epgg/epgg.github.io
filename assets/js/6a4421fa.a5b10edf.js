"use strict";(self.webpackChunkeg3_docs=self.webpackChunkeg3_docs||[]).push([[208],{338:(e,n,s)=>{s.d(n,{A:()=>r});const r=s.p+"assets/images/vcf2-46fd446c0093a5b203397c18905392f6.png"},738:(e,n,s)=>{s.d(n,{A:()=>r});const r=s.p+"assets/images/centos_cors1-db4449ec512b3b9c7744ddae6a2b7440.png"},1468:(e,n,s)=>{s.d(n,{A:()=>r});const r=s.p+"assets/images/mat1-ed733940d7b4897e0f243c178df9c92c.png"},2023:(e,n,s)=>{s.d(n,{A:()=>r});const r=s.p+"assets/images/gs2-b284f5b2806667979bc92f3bb82c9d64.png"},2151:(e,n,s)=>{s.d(n,{A:()=>r});const r=s.p+"assets/images/mat2-f3da30923705109a6e90277886cd475c.png"},3023:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>o});var r=s(3696);const a={},i=r.createContext(a);function t(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:t(e.components),r.createElement(i.Provider,{value:n},e.children)}},3172:(e,n,s)=>{s.d(n,{A:()=>r});const r=s.p+"assets/images/track_location_types-cebccc76a79fb8a816a36164160fc0e2.png"},4953:(e,n,s)=>{s.d(n,{A:()=>r});const r=s.p+"assets/images/vcf1-33358c559b4c5f4bded824e7c3af846a.png"},4988:(e,n,s)=>{s.d(n,{A:()=>r});const r=s.p+"assets/images/gs1-12fb10f4fa9e7f207981f2ec07cea34c.png"},5881:(e,n,s)=>{s.d(n,{A:()=>r});const r=s.p+"assets/images/centos_cors2-5cc7c3ce44f6e6bc14d00857d9e525e8.png"},6153:(e,n,s)=>{s.d(n,{A:()=>r});const r=s.p+"assets/images/s3_cors-d9f50e6f26ba69667482ab65d1f8fdd2.png"},6285:(e,n,s)=>{s.d(n,{A:()=>r});const r=s.p+"assets/images/Bed_format_with_different_columns-b9ba99a117a53281370fd9520741615d.png"},6366:(e,n,s)=>{s.d(n,{A:()=>r});const r=s.p+"assets/images/mat3-8025af929693b289c0ef70dddbf464bd.png"},7076:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>t,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"tracks/file-tracks","title":"File based tracks","description":"File-based tracks in the WashU Epigenome Browser fetch data directly from files, either through internal or external indexing mechanisms. To enable smooth access, the web server hosting these track files must support CORS (Cross-Origin Resource Sharing) policy and allow Byte Range Requests, which are essential for efficiently retrieving only the required portions of large files.","source":"@site/docs/tracks/file-tracks.md","sourceDirName":"tracks","slug":"/tracks/file-tracks","permalink":"/tracks/file-tracks","draft":false,"unlisted":false,"editUrl":"https://github.com/twlab/eg3/tree/development/docs/docs/docs/tracks/file-tracks.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"What are tracks?","permalink":"/tracks/track-categories"},"next":{"title":"API based tracks","permalink":"/tracks/api-tracks"}}');var a=s(2540),i=s(3023);const t={sidebar_position:2},o="File based tracks",c={},l=[{value:"File based track groups",id:"file-based-track-groups",level:2},{value:"Configure your webserver to enable CORS",id:"configure-your-webserver-to-enable-cors",level:2},{value:"Enable CORS on Apache2 under Ubuntu",id:"enable-cors-on-apache2-under-ubuntu",level:3},{value:"Enable CORS on Apache2 under CentOS",id:"enable-cors-on-apache2-under-centos",level:3},{value:"Enable CORS on Amazon S3 bucket",id:"enable-cors-on-amazon-s3-bucket",level:3},{value:"Enable CORS on Google cloud storage",id:"enable-cors-on-google-cloud-storage",level:3},{value:"Prepare track files",id:"prepare-track-files",level:2},{value:"Annotation Tracks",id:"annotation-tracks",level:2},{value:"bed",id:"bed",level:3},{value:"bigbed",id:"bigbed",level:3},{value:"refbed",id:"refbed",level:3},{value:"rgbpeak",id:"rgbpeak",level:3},{value:"bedcolor",id:"bedcolor",level:3},{value:"Variant Tracks",id:"variant-tracks",level:2},{value:"VCF",id:"vcf",level:3},{value:"Numerical Tracks",id:"numerical-tracks",level:2},{value:"bigWig",id:"bigWig",level:3},{value:"bedGraph",id:"bedGraph",level:3},{value:"Dynamic Sequence Tracks",id:"dynamic-sequence-tracks",level:2},{value:"dynseq",id:"dynseq",level:3},{value:"Read Alignment BAM Tracks",id:"read-alignment-bam-tracks",level:2},{value:"bam",id:"bam",level:3},{value:"Methylation Tracks",id:"methylation-tracks",level:2},{value:"methylC",id:"methylc",level:3},{value:"Categorical Tracks",id:"categorical-tracks",level:2},{value:"categorical",id:"categorical",level:3},{value:"Long range chromatin interaction",id:"long-range-chromatin-interaction",level:2},{value:"HiC",id:"HiC",level:3},{value:"longrange",id:"longrange",level:3},{value:"bigInteract",id:"bigInteract",level:3},{value:"qBED Track",id:"qbed-track",level:2},{value:"genome-align Track",id:"genome-align-track",level:2},{value:"Matplot Track",id:"matplot-track",level:2}];function d(e){const n={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"file-based-tracks",children:"File based tracks"})}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"File-based tracks"})," in the ",(0,a.jsx)(n.strong,{children:"WashU Epigenome Browser"})," fetch data directly from files, either through ",(0,a.jsx)(n.strong,{children:"internal or external indexing mechanisms"}),". To enable smooth access, the ",(0,a.jsx)(n.strong,{children:"web server hosting these track files"})," must support ",(0,a.jsx)(n.strong,{children:"CORS (Cross-Origin Resource Sharing) policy"})," and allow ",(0,a.jsx)(n.strong,{children:"Byte Range Requests"}),", which are essential for efficiently retrieving only the required portions of large files."]}),"\n",(0,a.jsxs)(n.p,{children:["Most tracks in the Browser belong to this category, including ",(0,a.jsx)(n.strong,{children:"BigWig, BigBed, BAM, BED, and BedGraph"}),". File formats like ",(0,a.jsx)(n.strong,{children:"BigWig and BigBed"})," have built-in indexes, allowing efficient data access. Other formats, such as ",(0,a.jsx)(n.strong,{children:"BED and BedGraph"}),", require an ",(0,a.jsx)(n.strong,{children:"additional index file"}),"\u2014for example, a ",(0,a.jsx)(n.strong,{children:"Tabix index (.tbi) generated by the Tabix program"})," or a ",(0,a.jsx)(n.strong,{children:"BAM index (.bai) generated by Samtools"}),"."]}),"\n",(0,a.jsxs)(n.p,{children:["Users can host ",(0,a.jsx)(n.strong,{children:"file-based tracks online"})," or ",(0,a.jsx)(n.strong,{children:"upload them from a local computer"}),". If uploading locally, the corresponding ",(0,a.jsx)(n.strong,{children:"index file must be uploaded simultaneously"})," to enable proper data retrieval and visualization."]}),"\n",(0,a.jsx)(n.h2,{id:"file-based-track-groups",children:"File based track groups"}),"\n",(0,a.jsxs)(n.p,{children:["Track files are divided to 2 groups based on their file types, text format files and binary files like ",(0,a.jsx)(n.code,{children:"bigWig"})," and ",(0,a.jsx)(n.code,{children:"hic"}),". For binary track files, if the track files are located at websites, they are [Remote Tracks], if they are located in users' computer then they are [Local Tracks]. For text track files, right now they can be uploaded from users' computer, they are called [Local Text Tracks]. Please check the following diagram as well:"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"image",src:s(3172).A+"",width:"1888",height:"1034"})}),"\n",(0,a.jsx)(n.admonition,{title:"important",type:"danger",children:(0,a.jsx)(n.p,{children:"Since all remote tracks are hosted on the web with HTTP/HTTPS links provided for submission as tracks, the webservers which are hosting the track files need Cross-Origin Resource Sharing (CORS) enabled."})}),"\n",(0,a.jsxs)(n.p,{children:["Quoted from ",(0,a.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS",children:"MDN"}),":"]}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"Cross-Origin Resource Sharing (CORS) is a mechanism that uses additional HTTP headers to tell a browser to let a web application running at one origin (domain) have permission to access selected resources from a server at a different origin. A web application makes cross-origin HTTP request when it requests a resource that has a different origin (domain, protocol, and port) than its own origin."}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"configure-your-webserver-to-enable-cors",children:"Configure your webserver to enable CORS"}),"\n",(0,a.jsx)(n.p,{children:"Most likely the browser domain is different from the server the tracks are hosted on. The hosting server needs CORS enabled. For any Apache web server, you might try the either following approach."}),"\n",(0,a.jsx)(n.h3,{id:"enable-cors-on-apache2-under-ubuntu",children:"Enable CORS on Apache2 under Ubuntu"}),"\n",(0,a.jsx)(n.p,{children:"For an Apache web server in Ubuntu this setup (add this to the enabled .conf file) would work:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:'    Header always set Access-Control-Allow-Origin "*"\n    Header always set Access-Control-Allow-Headers: Range\n    Header always set Access-Control-Max-Age: 86400\n'})}),"\n",(0,a.jsx)(n.p,{children:"Then restart your Apache server."}),"\n",(0,a.jsx)(n.h3,{id:"enable-cors-on-apache2-under-centos",children:"Enable CORS on Apache2 under CentOS"}),"\n",(0,a.jsxs)(n.p,{children:["Try add this to the main configuration file ",(0,a.jsx)(n.code,{children:"/etc/httpd/conf/httpd.conf"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:'    Header always set Access-Control-Allow-Origin "*"\n    Header always set Access-Control-Allow-Headers: Range\n    Header always set Access-Control-Max-Age: 86400\n'})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"image",src:s(738).A+"",width:"854",height:"510"})}),"\n",(0,a.jsxs)(n.p,{children:["in ",(0,a.jsx)(n.code,{children:"/etc/httpd/conf.modules.d/00-base.conf"}),", the header module should be enabled:"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"image",src:s(5881).A+"",width:"794",height:"36"})}),"\n",(0,a.jsx)(n.p,{children:"Then restart your Apache server."}),"\n",(0,a.jsx)(n.h3,{id:"enable-cors-on-amazon-s3-bucket",children:"Enable CORS on Amazon S3 bucket"}),"\n",(0,a.jsxs)(n.p,{children:["We have setup a test s3 bucket at ",(0,a.jsx)(n.code,{children:"http://washu-track-host.s3-website-us-east-1.amazonaws.com"})," and tried ",(0,a.jsx)(n.a,{href:"#bigwig",children:"bigWig"})," files, the link ",(0,a.jsx)(n.code,{children:"http://washu-track-host.s3-website-us-east-1.amazonaws.com/bigwig/TW551_20-5-bonemarrow_MRE.CpG.bigWig"})," can be displayed at the browser with following CORS setup:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:'[\n    {\n        "AllowedHeaders": [\n            "*"\n        ],\n        "AllowedMethods": [\n            "GET",\n            "HEAD"\n        ],\n        "AllowedOrigins": [\n            "*"\n        ]\n    }\n]\n'})}),"\n",(0,a.jsx)(n.p,{children:"If you happen to use old XML settings, you can setup it like this:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-xml",children:'<?xml version="1.0" encoding="UTF-8"?>\n<CORSConfiguration xmlns="http://s3.amazonaws.com/doc/2006-03-01/">\n<CORSRule>\n    <AllowedOrigin>*</AllowedOrigin>\n    <AllowedMethod>GET</AllowedMethod>\n    <AllowedHeader>*</AllowedHeader>\n</CORSRule>\n</CORSConfiguration>\n'})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"image",src:s(6153).A+"",width:"1354",height:"754"})}),"\n",(0,a.jsx)(n.h3,{id:"enable-cors-on-google-cloud-storage",children:"Enable CORS on Google cloud storage"}),"\n",(0,a.jsx)(n.p,{children:"If you have track files hotsed in Google cloud storage, they can be viewed in the browser as well after setting up correct CORS policy."}),"\n",(0,a.jsxs)(n.p,{children:["First you need make the bucket public, for more information you can check the ",(0,a.jsx)(n.a,{href:"https://cloud.google.com/storage/docs/access-control/making-data-public",children:"docs from google"}),":"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"image",src:s(4988).A+"",width:"2354",height:"830"})}),"\n",(0,a.jsxs)(n.p,{children:["Then you can use either the ",(0,a.jsx)(n.a,{href:"https://cloud.google.com/storage/docs/quickstart-gsutil?cloudshell=true",children:"gsutil"})," tool or the CloudShell in your Google cloud's web console. Create a file called ",(0,a.jsx)(n.code,{children:"cors.json"})," with contents below:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'[\n    {\n    "origin": ["*"],\n    "method": ["GET", "HEAD"],\n    "responseHeader": ["Authorization", "Content-Range", "Accept", "Content-Type", "Origin", "Range"],\n    "maxAgeSeconds": 3600\n    }\n]\n'})}),"\n",(0,a.jsx)(n.p,{children:"then set the CORS policy to your bucket with the command below:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:"    gsutil cors set cors.json gs://washu-browser-track-host\n"})}),"\n",(0,a.jsx)(n.p,{children:"the screenshot below shows how I did in CloudShell in the console web page:"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"image",src:s(2023).A+"",width:"1624",height:"360"})}),"\n",(0,a.jsx)(n.p,{children:"After this, you can copy the URL to the file and submit to the browser for visualization."}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"image",src:s(9886).A+"",width:"1470",height:"1274"})}),"\n",(0,a.jsx)(n.h2,{id:"prepare-track-files",children:"Prepare track files"}),"\n",(0,a.jsx)(n.p,{children:"The browser accesses track files from their URL. Only a portion of the data, that within the specific view region, are transferred to the browser for visualization. Thus, all the track files need be hosted in a web accssible location using HTTP or HTTPS. The following sections introduce the track types that the browser supports."}),"\n",(0,a.jsxs)(n.p,{children:["Binary track file formats like ",(0,a.jsx)(n.a,{href:"#bigwig",children:"bigWig"})," and ",(0,a.jsx)(n.a,{href:"#hic",children:"HiC"})," can be used directly with the browser. ",(0,a.jsx)(n.a,{href:"#bedgraph",children:"bedGraph"}),", ",(0,a.jsx)(n.a,{href:"#methylc",children:"methylC"}),", ",(0,a.jsx)(n.a,{href:"#categorical",children:"categorical"}),", ",(0,a.jsx)(n.a,{href:"#longrange",children:"longrange"})," and ",(0,a.jsx)(n.a,{href:"#bed",children:"bed"})," track files need to be ",(0,a.jsx)(n.a,{href:"http://www.htslib.org/doc/tabix.html",children:"compressed by bgzip and indexed by tabix"})," for use by the browser. The resulting index file with suffix ",(0,a.jsx)(n.code,{children:".tbi"})," needs to be located at the same URL with the ",(0,a.jsx)(n.code,{children:".gz"})," file."]}),"\n",(0,a.jsxs)(n.p,{children:["Bed like format track files need be sorted before submission. For example, if we have a track file named ",(0,a.jsx)(n.code,{children:"track.bedgraph"})," we can use the generic Linux ",(0,a.jsx)(n.code,{children:"sort"})," command, the ",(0,a.jsx)(n.code,{children:"bedSort"})," tool from UCSC, or the ",(0,a.jsx)(n.code,{children:"sort-bed"})," command from BEDOPS. Here is an example command using each of the three methods:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:"    # Using Linux sort\n    sort -k1,1 -k2,2n track.bedgraph > track.bedgraph.sorted\n    # Using bedSort\n    bedSort track.bedgraph track.bedgraph.sorted\n    # Using sort-bed\n    sort-bed track.bedgraph > track.bedgraph.sorted\n"})}),"\n",(0,a.jsx)(n.p,{children:"Then the file must be compressed using bgzip and indexed using tabix:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:"    bgzip track.bedgraph.sorted\n    tabix -p bed track.bedgraph.sorted.gz\n"})}),"\n",(0,a.jsx)(n.p,{children:'Move files "track.bedgraph.sorted.gz" and "track.bedgraph.sorted.gz.tbi" to a web server. The two files must be in the same directory. Obtain the URL to "track.bedgraph.sorted.gz" for submission.'}),"\n",(0,a.jsxs)(n.p,{children:["SAM files first need to be compressed to ",(0,a.jsx)(n.a,{href:"#bam",children:"BAM"})," files. ",(0,a.jsx)(n.a,{href:"#bam",children:"BAM"})," files need to be coordinate sorted and indexed for use by the browser. The resulting index file with suffix ",(0,a.jsx)(n.code,{children:".bai"})," needs be located at the same URL with the ",(0,a.jsx)(n.code,{children:".bam"})," file."]}),"\n",(0,a.jsx)(n.p,{children:"Here is an example command:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:"    # Using samtools view to convert to bam\n    samtools view -Sb test.sam > test.bam\n    # Using samtools sort to coordinate sort the file\n    samtools sort test.bam > test.sorted.bam\n    # Using samtools index\n    samtools index test.sorted.bam\n"})}),"\n",(0,a.jsx)(n.h2,{id:"annotation-tracks",children:"Annotation Tracks"}),"\n",(0,a.jsx)(n.p,{children:"Annotation tracks represent genomic features or intervals across the genome. Popular examples include SNP files, CpG Island files, and blacklisted regions."}),"\n",(0,a.jsx)(n.h3,{id:"bed",children:"bed"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"bed"})," format files can be used to annotate elements across the genome or to represent reads from a sequencing experiment. For more about the bed format please check the ",(0,a.jsx)(n.a,{href:"https://genome.ucsc.edu/FAQ/FAQformat.html#format1",children:"UCSC\nbed"})," page."]}),"\n",(0,a.jsx)(n.p,{children:"Example lines are below:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:"    chr9    3035610 3036180 Blacklist_155   .   +\n    chr9    3036200 3036480 Blacklist_156   .   +\n    chr9    3036420 3036660 Blacklist_157   .   +\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Every line must consist of at least 3 fields separated by the ",(0,a.jsx)(n.code,{children:"Tab"})," delimiter. The required fields from left to right are ",(0,a.jsx)(n.code,{children:"chromosome"}),", ",(0,a.jsx)(n.code,{children:"start position"})," (0-based), and ",(0,a.jsx)(n.code,{children:"end position"})," (not included). A fourth (optional) column is reserved for the name of the interval and the sixth column (optional) is reserved for the strand. All other columns are ignored, but can be present in the file."]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"image",src:s(6285).A+"",width:"1634",height:"266"})}),"\n",(0,a.jsx)(n.admonition,{title:"note",type:"info",children:(0,a.jsxs)(n.p,{children:["The display of a bed file differs by how many columns are provided in the file (see image above). The simplest, 3 column, format just displays blocks for each interval. The four column format displays the name of each element over each interval. If the sixth column is provided in the file then ",(0,a.jsx)(n.code,{children:">>>"})," or ",(0,a.jsx)(n.code,{children:"<<<"})," will be displayed over each interval to represent strand information."]})}),"\n",(0,a.jsxs)(n.p,{children:["This format needs to be compressed by bgzip and indexed by tabix for submission as a track. See ",(0,a.jsx)(n.a,{href:"#prepare-track-files",children:"Prepare track files"}),"."]}),"\n",(0,a.jsx)(n.h3,{id:"bigbed",children:"bigbed"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"bigbed"})," is a binary format of ",(0,a.jsx)(n.code,{children:"bed"})," file. ",(0,a.jsx)(n.code,{children:"bigbed"})," file can be submitted directly without bgzip/tabix processing. For more about the bed format please check the ",(0,a.jsx)(n.a,{href:"https://genome.ucsc.edu/goldenPath/help/bigBed.html",children:"UCSC bigbed"})," page."]}),"\n",(0,a.jsx)(n.h3,{id:"refbed",children:"refbed"}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"refbed"})," format files allows you to upload a custom gene annotation track. It is similar to the refGene bed-like file downloaded from UCSC but with slight modifications. Each file of this format contains (each column is separated by ",(0,a.jsx)(n.em,{children:"Tab"}),"):"]}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:["chr, transcript_start, transcript_stop, translation_start,\ntranslation_stop, strand, gene_name, transcript_id, type,\nexon(including UTR bases) starts, exon(including UTR bases) stops, and\nadditional gene info (",(0,a.jsx)(n.em,{children:"optional"}),")"]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["This format needs to be compressed by bgzip and indexed by tabix for submission as a track. See ",(0,a.jsx)(n.a,{href:"#prepare-track-files",children:"Prepare track files"}),"."]}),"\n",(0,a.jsx)(n.admonition,{type:"tip",children:(0,a.jsx)(n.p,{children:"The 9th column contains gene type, but is simplified from the Gencode/Ensembl annotations to coding, pseudo, nonCoding, problem, and\nother. These classes of gene type are colored differently when the track is displayed on the browser."})}),"\n",(0,a.jsx)(n.admonition,{type:"tip",children:(0,a.jsx)(n.p,{children:"The 10th and 11th columns contain exon starts and ends respectively. Each start or end is seperated by a comma."})}),"\n",(0,a.jsx)(n.p,{children:"For example:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:"    start1,start2,start3,start4 stop1,stop2,stop3,stop4\n    100,120,140,160 110,130,150,170\n"})}),"\n",(0,a.jsx)(n.admonition,{type:"tip",children:(0,a.jsxs)(n.p,{children:["The 12th column contains extra information. This information can be manually annotated or we suggest using ",(0,a.jsx)(n.a,{href:"http://useast.ensembl.org/biomart/martview/",children:"Ensembl\nBiomart"})," to download paired Transcript stable IDs and Gene descriptions. The information in this column must be seperated by ",(0,a.jsx)(n.em,{children:"spaces"})," and not tabs."]})}),"\n",(0,a.jsx)(n.p,{children:"All of the below lines will work for additional information in the 12th column:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:"    Gene ID:ENSMUSG00000103482.1 Gene Type:TEC Transcript Type:TEC Additional Info:predicted gene, 37999 [Source:MGI Symbol;Acc:MGI:5611227]\n    Gene ID:ENSMUSG00000103482.1 Gene Type:TEC Transcript Type:TEC \n    ENSMUSG00000103482.1 TEC\n    Additional Info:predicted gene, 37999 [Source:MGI Symbol;Acc:MGI:5611227]\n    My Favorite Gene\n"})}),"\n",(0,a.jsx)(n.p,{children:"Here are a few example lines in refbed format from gencode.vM17.annotation.gtf (mouse mm10 format):"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:"    chr1    24910461    24911659    24910461    24911659    -   RP23-109H7.1    ENSMUST00000187022.1    pseudo  24911220,24910461   24911659,24910681   Gene       ID:ENSMUSG00000100808.1 Gene Type:processed_pseudogene Transcript Type:processed_pseudogene Additional Info:predicted gene 28594           [Source:MGI Symbol;Acc:MGI:5579300]\n    chr1    25203443    25205696    25203443    25205696    -   Adgrb3  ENSMUST00000190202.1    coding  25203443    25205696    Gene                             ID:ENSMUSG00000033569.17 Gene Type:protein_coding Transcript Type:retained_intron Additional Info:adhesion G protein-coupled receptor     B3 [Source:MGI Symbol;Acc:MGI:2441837]\n    chr1    25276404    25277954    25276404    25277954    -   RP23-21P2.4 ENSMUST00000193138.1    problem 25276404    25277954    Gene                         ID:ENSMUSG00000104257.1 Gene Type:TEC Transcript Type:TEC Additional Info:predicted gene, 20172 [Source:MGI Symbol;Acc:MGI:5012357]\n    chr1    26566833    26566938    26566833    26566938    +   Gm24064 ENSMUST00000157486.1    nonCoding   26566833    26566938    Gene                           ID:ENSMUSG00000088111.1 Gene Type:snoRNA Transcript Type:snoRNA Additional Info:predicted gene, 24064 [Source:MGI                         Symbol;Acc:MGI:5453841]\n"})}),"\n",(0,a.jsx)(n.admonition,{title:"note",type:"info",children:(0,a.jsxs)(n.p,{children:["The last optional column is dislayed as a gene description when a gene is clicked on the browser. Our modified format can be easily obtained\nfrom available refGene.bed file downloads from UCSC. Gencode GTF and Ensembl GTF files can be manipulated to this format using the\nConverting_Gencode_or_Ensembl_GTF_to_refBed.bash script in ",(0,a.jsx)(n.a,{href:"https://github.com/lidaof/eg-react/tree/master/backend/scripts",children:"scripts"}),". The script by default puts ",(0,a.jsx)(n.code,{children:"Gene ID:"}),", ",(0,a.jsx)(n.code,{children:"Gene Type:"}),", and ",(0,a.jsx)(n.code,{children:"Transcript Type:"}),' in the additional information column. Run with an annotation file, with columns Transcript_ID and Description (seperated\nby a tab), the script will also add "Additional Info" to the 12th column. The script depends on bedtools, bgzip, and tabix. Lastly, within the script an ',(0,a.jsx)(n.code,{children:"awk"})," array is used to reclassify gene type and can easily be modified for additional gene types."]})}),"\n",(0,a.jsx)(n.p,{children:"The script is run as follows:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:"    bash Converting_Gencode_or_Ensembl_GTF_to_refBed.bash Ensembl my.gtf my_optional_annotation.txt\n    bash Converting_Gencode_or_Ensembl_GTF_to_refBed.bash Gencode gencode.vM17.annotation.gtf \n    bash Converting_Gencode_or_Ensembl_GTF_to_refBed.bash Gencode gencode.vM17.annotation.gtf biomart_2col.txt\n"})}),"\n",(0,a.jsx)(n.admonition,{title:"important",type:"danger",children:(0,a.jsxs)(n.p,{children:["Spaces are used as delimiters in the ",(0,a.jsx)(n.code,{children:"GTF"})," files so change gene names\nwith spaces before processing."]})}),"\n",(0,a.jsx)(n.p,{children:"For Example:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:"    sed -i 's/ (1 of many)/_(1_of_many)/g' Danio_rerio.GRCz10.91.chr.gtf\n"})}),"\n",(0,a.jsx)(n.h3,{id:"rgbpeak",children:"rgbpeak"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"rgbpeak"})," track file is based on ",(0,a.jsx)(n.code,{children:"bigbed"})," format, content of a ",(0,a.jsx)(n.code,{children:"rgbpeak"})," file (in bed format) looks like below:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:"    chr10 46092019 46092519 chr10_46092019 537 . 46092019 46092519 117,117,117\n    chr10 47253553 47254053 chr10_47253553 748 . 47253553 47254053 107,107,107\n"})}),"\n",(0,a.jsx)(n.p,{children:"where the columns are"}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"chrom, start, end, peak_id, score, strand, thick_start, thick_end, RGB value"}),","]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"the RBG value will be used for the color while ploting and score will be used to determin the height of the peak. if there is strand, arrow will\nbe drew if zoom enough. thick_start and thick_end columns are ignored now."}),"\n",(0,a.jsx)(n.p,{children:"The bed file like above can be convert to bigbed format using the commands below:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:"    bedSort peaks_rgb.bed peaks_rgb.bed\n    bedToBigBed peaks_rgb.bed hg38.chroms.sizes peaks_rgb.bigbed\n"})}),"\n",(0,a.jsx)(n.h3,{id:"bedcolor",children:"bedcolor"}),"\n",(0,a.jsxs)(n.p,{children:["Simiar to ",(0,a.jsx)(n.a,{href:"#bed",children:"bed"})," track, ",(0,a.jsx)(n.code,{children:"bedcolor"})," track is a 4 column bed file while the 4th column is a color string:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:"    chr11   108280000   109080000   #ff0100\n    chr11   109080000   109480000   #0000ff\n    chr11   109720000   110160000   #018100\n    chr11   110200000   111400000   #0064fb\n    chr11   111400000   112640000   #ef8c0a\n    chr11   112640000   113480000   #7f007f\n    chr11   113520000   114520000   #520000\n    chr11   114520000   114880000   #39ae00\n"})}),"\n",(0,a.jsx)(n.p,{children:"It can be uploaded as local text track, or indexed after bgzip/tabix and submitted as remote track."}),"\n",(0,a.jsx)(n.h2,{id:"variant-tracks",children:"Variant Tracks"}),"\n",(0,a.jsx)(n.h3,{id:"vcf",children:"VCF"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"VCF"})," files can be visulaized in the browser for displaying variant call data. Currently VCF file need to be bgzip and tabix indexed for submission. The VCF track has 3 display modes: [auto], [density] and [full]. By default it's on [auto] mode, this means when viewing a ",(0,a.jsx)(n.code,{children:"VCF"})," track at a region greater than 100Kb, the track will be displayed as numerical track showing the density of the variant calls, and when view region is less than or equal to 100Kb, it will be displayed in Full mode. The display mode can be changed from the right clicking menu. Click each of the variant item will show the popup tooltip with more information about this variant."]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"image",src:s(4953).A+"",width:"2612",height:"1340"})}),"\n",(0,a.jsx)(n.p,{children:"Color of each variant item are encoded based on the AF or quality value, using which value (AF or quality) to color the variant, or color of high and low value variant can be customized from right clicking menu as well."}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"image",src:s(338).A+"",width:"1242",height:"942"})}),"\n",(0,a.jsx)(n.h2,{id:"numerical-tracks",children:"Numerical Tracks"}),"\n",(0,a.jsx)(n.p,{children:"Currently there are two types of numerical tracks:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"#bigwig",children:"bigWig"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"#bedgraph",children:"bedGraph"})}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"bigWig",children:"bigWig"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"bigWig"})," is a popular format to represent numerical values over genomic coordinates. Please check the ",(0,a.jsx)(n.a,{href:"https://genome.ucsc.edu/goldenpath/help/bigWig.html",children:"UCSC bigWig"})," page to learn  more about this format."]}),"\n",(0,a.jsx)(n.h3,{id:"bedGraph",children:"bedGraph"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"bedGraph"})," format also defines values in diffenent genomic locations. For more about the bedGraph format please check the ",(0,a.jsx)(n.a,{href:"https://genome.ucsc.edu/goldenpath/help/bedgraph.html",children:"UCSC bedGraph"})," page."]}),"\n",(0,a.jsx)(n.p,{children:"Example lines are below:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:"    chr12   6537598 6537599 28.80914\n    chr12   6537599 6537600 28.96908\n    chr12   6537599 6537612 -2\n    chr12   6537600 6537601 29.30229\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Every line consists of 4 fields separated by the ",(0,a.jsx)(n.code,{children:"Tab"})," delimiter. The fields from left to right are ",(0,a.jsx)(n.code,{children:"chromosome"}),", ",(0,a.jsx)(n.code,{children:"start position"})," (0-based), ",(0,a.jsx)(n.code,{children:"end position"})," (not included), and ",(0,a.jsx)(n.code,{children:"value"}),"."]}),"\n",(0,a.jsx)(n.admonition,{type:"tip",children:(0,a.jsxs)(n.p,{children:["You can use negative values for reverse strand. Both positive and negative values can exist over the same coordinates (they can overlap). In ",(0,a.jsx)(n.code,{children:"bigWig"})," format negative values can also be specified, but they cannot overlap with positive values."]})}),"\n",(0,a.jsxs)(n.p,{children:["This format needs to be compressed by bgzip and indexed by tabix for submission as a track. See ",(0,a.jsx)(n.a,{href:"#prepare-track-files",children:"Prepare track files"}),"."]}),"\n",(0,a.jsx)(n.h2,{id:"dynamic-sequence-tracks",children:"Dynamic Sequence Tracks"}),"\n",(0,a.jsx)(n.h3,{id:"dynseq",children:"dynseq"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"dynseq"})," is a new track type which is proposed and initially developped by Surag Nair from Anshul Kundaje's lab at Stanford University. Its track file is the same as ",(0,a.jsx)(n.code,{children:"bigWig"})," format. It provides scores for each nucleotide in the genome, which can be derived from using importance scoring methods on machine learning models. We visualize them as a string of letters with different colors (for each nucleotide) and different heights scaled by the importance scores."]}),"\n",(0,a.jsxs)(n.p,{children:["An example of loaded ",(0,a.jsx)(n.code,{children:"dynseq"})," track highlighting an E2F motif instance is illustrated below:"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"image",src:s(8822).A+"",width:"2434",height:"524"})}),"\n",(0,a.jsx)(n.h2,{id:"read-alignment-bam-tracks",children:"Read Alignment BAM Tracks"}),"\n",(0,a.jsx)(n.h3,{id:"bam",children:"bam"}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"bam"})," format is a compressed SAM format used to store sequence alignment data. Please check the ",(0,a.jsx)(n.a,{href:"https://samtools.github.io/hts-specs/SAMv1.pdf",children:"Samtools Documentation"})," page to learn more about this format and how to manipulate these files."]}),"\n",(0,a.jsx)(n.h2,{id:"methylation-tracks",children:"Methylation Tracks"}),"\n",(0,a.jsxs)(n.p,{children:["Methylation experiments like MeDIP-seq or MRE-seq can use ",(0,a.jsx)(n.a,{href:"#bigwig",children:"bigWig"})," or ",(0,a.jsx)(n.a,{href:"#bedgraph",children:"bedGraph"})," format for data display. For WGBS if users want to show read depth, methylation context, and methylation level then the data is best suited for the ",(0,a.jsx)(n.a,{href:"#methylc",children:"methylC"})," format, described below."]}),"\n",(0,a.jsx)(n.h3,{id:"methylc",children:"methylC"}),"\n",(0,a.jsxs)(n.p,{children:["Methylation data are formatted in ",(0,a.jsx)(n.code,{children:"methylC"})," format, which is a 7 column bed format file:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:"    chr1    10542   10543   CG      0.923   -       26\n    chr1    10556   10557   CHH     0.040   -       25\n    chr1    10562   10563   CG      0.941   +       17\n    chr1    10563   10564   CG      0.958   -       24\n    chr1    10564   10565   CHG     0.056   +       18\n    chr1    10566   10567   CHG     0.045   -       22\n    chr1    10570   10571   CG      0.870   +       23\n    chr1    10571   10572   CG      0.913   -       23\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Each line contains 7 fields separated by Tab. The fields are ",(0,a.jsx)(n.code,{children:"chromosome"}),", ",(0,a.jsx)(n.code,{children:"start position"})," (0-based), ",(0,a.jsx)(n.code,{children:"end position"})," (not included), ",(0,a.jsx)(n.code,{children:"methylation context"})," (CG, CHG, CHG etc.), ",(0,a.jsx)(n.code,{children:"methylation value"}),", ",(0,a.jsx)(n.code,{children:"strand"}),", and ",(0,a.jsx)(n.code,{children:"read depth"}),"."]}),"\n",(0,a.jsxs)(n.p,{children:["This format needs to be compressed by bgzip and indexed by tabix for submission as a track. See ",(0,a.jsx)(n.a,{href:"#prepare-track-files",children:"Prepare track files"}),"."]}),"\n",(0,a.jsx)(n.h2,{id:"categorical-tracks",children:"Categorical Tracks"}),"\n",(0,a.jsx)(n.p,{children:"Categorical tracks represent genomic bins for different categories. The most popular example is the represnetation of chromHMM data which indicates which region is likely an enhancer, likely a promoter, etc. Other uses for the track include the display of different types of methylation (DMRs, DMVs, LMRs, UMRs, etc.) or even peaks colored by tissue type."}),"\n",(0,a.jsx)(n.h3,{id:"categorical",children:"categorical"}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"categorical"})," track uses the first three columns of the standard ",(0,a.jsx)(n.a,{href:"#bed",children:"bed"})," format (",(0,a.jsx)(n.code,{children:"chromosome"}),", ",(0,a.jsx)(n.code,{children:"start position"})," (0-based), and ",(0,a.jsx)(n.code,{children:"end position"})," (not included)) with the addition of a 4th column indicating the category type which can be a string or number:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:"    chr1    start1  end1    category1\n    chr2    start2  end2    category2\n    chr3    start3  end3    category3\n    chr4    start4  end4    category4\n"})}),"\n",(0,a.jsxs)(n.admonition,{title:"important",type:"danger",children:[(0,a.jsxs)(n.p,{children:["when you use numbers like 1, 2 and 3 as category names, in the datahub definition, please use it a string for the ",(0,a.jsx)(n.code,{children:"category"})," attribute in options, see the example below:"]}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'{\n    "type": "categorical",\n    "name": "ChromHMM",\n    "url": "https://egg.wustl.edu/d/hg19/E017_15_coreMarks_dense.gz",\n    "options": {\n        "category": {\n            "1": {"name": "Active TSS", "color": "#ff0000"},\n            "2": {"name": "Flanking Active TSS", "color": "#ff4500"},\n            "3": {"name": "Transcr at gene 5\' and 3\'", "color": "#32cd32"}\n        }\n    }\n}\n'})})]}),"\n",(0,a.jsxs)(n.p,{children:["This format needs to be compressed by bgzip and indexed by tabix for submission as a track. See ",(0,a.jsx)(n.a,{href:"#prepare-track-files",children:"Prepare track files"}),"."]}),"\n",(0,a.jsx)(n.h2,{id:"long-range-chromatin-interaction",children:"Long range chromatin interaction"}),"\n",(0,a.jsxs)(n.p,{children:["Long range chromatin interaction data are used to show relationships between genomic regions. ",(0,a.jsx)(n.a,{href:"#hic",children:"HiC"})," is used to show the results from a HiC experiment."]}),"\n",(0,a.jsx)(n.h3,{id:"HiC",children:"HiC"}),"\n",(0,a.jsxs)(n.p,{children:["To learn more about the HiC format please check ",(0,a.jsx)(n.a,{href:"https://github.com/aidenlab/juicer/wiki/Data",children:"https://github.com/aidenlab/juicer/wiki/Data"}),"."]}),"\n",(0,a.jsx)(n.h3,{id:"longrange",children:"longrange"}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"longrange"})," track is a ",(0,a.jsx)(n.a,{href:"#bed",children:"bed"})," format-like file type. Each row contains columns from left to right: ",(0,a.jsx)(n.code,{children:"chromosome"}),", ",(0,a.jsx)(n.code,{children:"start position"})," (0-based), and ",(0,a.jsx)(n.code,{children:"end position"})," (not included), interaction target in this format ",(0,a.jsx)(n.code,{children:"chr2:333-444,55"}),'. As an example, interval "chr1:111-222" interacts with interval "chr2:333-444" on a score of 55, we will use following two lines to represent this interaction:']}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:"    chr1    111 222  chr2:333-444,55\n    chr2    333 444  chr1:111-222,55\n"})}),"\n",(0,a.jsx)(n.admonition,{title:"important",type:"danger",children:(0,a.jsxs)(n.p,{children:["Be sure to make ",(0,a.jsx)(n.strong,{children:"TWO"})," records for a pair of interacting loci, one record for each locus."]})}),"\n",(0,a.jsxs)(n.p,{children:["This format needs to be compressed by bgzip and indexed by tabix for submission as a track. See ",(0,a.jsx)(n.a,{href:"#prepare-track-files",children:"Prepare track files"}),"."]}),"\n",(0,a.jsx)(n.h3,{id:"bigInteract",children:"bigInteract"}),"\n",(0,a.jsxs)(n.p,{children:["The bigInteract format from UCSC can also be used at the browser, for more details about this format, please check the ",(0,a.jsx)(n.a,{href:"https://genome.ucsc.edu/goldenPath/help/interact.html",children:"UCSC bigInteract format"})," page."]}),"\n",(0,a.jsx)(n.h2,{id:"qbed-track",children:"qBED Track"}),"\n",(0,a.jsx)(n.p,{children:"qBED is tab-delimited, plain text format for discrete genomic data, such as transposon insertions. This format requires a minimum of four columns and supports up to six. The four required columns are CHROM, START, END, and VALUE, where VALUE is a numeric value (i.e. an int or float). As with BED files, the START and END coordinates are 0-indexed. The fifth and sixth columns are optional and represent STRAND and ANNOTATION, respectively. The ANNOTATION column can be used to store sample- or entry- specific information, such as a replicate barcode. Here is an example of a four-column qBED file:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:"    chr1    41954321        41954325        1\n    chr1    41954321        41954325        18\n    chr1    52655214        52655218        1\n    chr1    52655214        52655218        1\n    chr1    54690384        54690388        3\n    chr1    54713998        54714002        1\n    chr1    54713998        54714002        1\n    chr1    54713998        54714002        13\n    chr1    54747055        54747059        1\n    chr1    54747055        54747059        4\n    chr1    60748489        60748493        2\n"})}),"\n",(0,a.jsx)(n.p,{children:"Here is an example of a six-column qBED file:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:"    chr1    51441754        51441758        1       -       CTAGAGACTGGC\n    chr1    51441754        51441758        21      -       CTTTCCTCCCCA\n    chr1    51982564        51982568        3       +       CGCGATCGCGAC\n    chr1    52196476        52196480        1       +       AGAATATCTTCA\n    chr1    52341019        52341023        1       +       TACGAAACACTA\n    chr1    59951043        59951047        1       +       ACAAGACCCCAA\n    chr1    59951043        59951047        1       +       ACAAGAGAGACT\n    chr1    61106283        61106287        1       -       ATGCACTACTTC\n    chr1    61106283        61106287        7       -       CGTTTTTCACCT\n    chr1    61542006        61542010        1       -       CTGAGAGACTGG\n"})}),"\n",(0,a.jsx)(n.p,{children:"Your text file must be sorted by the first three columns. If your filename is example.qbed, you can sort it with the following command:"}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.code,{children:"sort -k1V -k2n -k3n example.qbed > example_sorted.qbed"})}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["Alternatively, with ",(0,a.jsx)(n.code,{children:"bedops"}),":"]}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"sort-bed example.qbed > example_sorted.qbed"}),"."]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Note that you can have strand information without a barcode, but you cannot have barcode information without a strand column."}),"\n",(0,a.jsx)(n.p,{children:"Place your sorted qBED file in a web-accessible directory, then compress and index as follows:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:"    bgzip example_sorted.qbed\n    tabix -p bed example_sorted.qbed.gz\n"})}),"\n",(0,a.jsx)(n.h2,{id:"genome-align-track",children:"genome-align Track"}),"\n",(0,a.jsx)(n.p,{children:"genome-align is tab-delimited, plain text BED-like format to display pairwise whole-genome alignment. It can be directly derived from AXT file. The four required columns are CHROM,  TART, END, and ALIGNMENT, where ALIGNMENT indicates id number and detailed alignment information in a JSON format :"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:"    chr1    start   end alignment\n"})}),"\n",(0,a.jsx)(n.p,{children:"The Fourth column ALIGNMENT contains the following information:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'"id":1,\n"genomealign": {\n    "chr": "chr4",\n    "start": 154100819,\n    "stop": 154100880,\n    "strand": "-",\n    "targetseq": "ATTGGAGGAAAGATGAGTGAGAGCATCAACTTCTCTCACAACCTAGGCCAGTAAGTAGTGCTT",\n    "queryseq":  "ATTGGAGGGAGGGTGAACAAAGAGATAGACTTCTG--GCAACCTGGGCCAGTAGGTAGTGTCT"\n}\n\n'})}),"\n",(0,a.jsx)(n.p,{children:"Here is an example of the genome-align track:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'    chr1    12177   12240   id:1,genomealign:{chr:"chr4",start:154100819,stop:154100880,strand:"-",targetseq:"ATTGGAGGAAAGATGAGTGAGAGCATCAACTTCTCTCACAACCTAGGCCAGTAAGTAGTGCTT",queryseq:"ATTGGAGGGAGGGTGAACAAAGAGATAGACTTCTG--GCAACCTGGGCCAGTAGGTAGTGTCT"}\n    chr1    12245   12273   id:2,genomealign:{chr:"chr9",start:114130992,stop:114131016,strand:"+",targetseq:"CATCTCCTTGGCTGTGATACGTGGCCGG",queryseq:"TGTCCCCTTGTCTGC----CGGGGCTGG"}\n'})}),"\n",(0,a.jsx)(n.p,{children:"AXT file can be generated by [lastz] or [blastz]. It is also possible to make genome alignment using minimap2, and sequentially convert minimap2 SAM output to AXT file. Here is our  pipeline making hg38-CHM13 genome-align AXT file:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:"    minimap2 -x asm5 --cs=long hg38.fa chm13.fa > hg38-chm13.paf\n    sort -k6,6 -k8,8n -k9,9n hg38-chm13.paf|perl -ln unique_paf.pl > hg38-chm13.unique.paf\n    paftools.js view -f maf hg38-chm13.unique.paf > hg38-chm13.maf\n    maf-convert axt hg38-chm13.maf > hg38-chm13.axt\n    python3 axtSplit.py 100 hg38-chm13.axt hg38-chm13.split.axt\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Note we used two custom script [unique_paf.pl] and [axtSplit.py] to remove redundant segments in the alignment and split long alignment records to smaller ones separated by gaps > 100bp. You can find them in the ",(0,a.jsx)(n.a,{href:"https://github.com/lidaof/eg-react/tree/master/backend/scripts",children:"scripts"})," directory: (",(0,a.jsx)(n.a,{href:"https://github.com/lidaof/eg-react/blob/master/backend/scripts",children:"https://github.com/lidaof/eg-react/blob/master/backend/scripts"}),")."]}),"\n",(0,a.jsxs)(n.p,{children:["AT last, we have a script to convert AXT file to genome-align format, you can find it in the ",(0,a.jsx)(n.a,{href:"https://github.com/lidaof/eg-react/tree/master/backend/scripts",children:"scripts"})," directory: (",(0,a.jsx)(n.a,{href:"https://github.com/lidaof/eg-react/blob/master/backend/scripts/axt2align.py",children:"https://github.com/lidaof/eg-react/blob/master/backend/scripts/axt2align.py"}),")."]}),"\n",(0,a.jsx)(n.p,{children:"Your text file must be sorted by the first three columns. If your filename is example.qbed, you can sort it with the following command:"}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.code,{children:"sort -k1V -k2n -k3n example.genomealign > example.sorted.genomealign"})}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Place your sorted genome-align file in a web-accessible directory, then\ncompress and index as follows:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:"    bgzip example.sorted.genomealign\n    tabix -p bed example.sorted.genomealign.gz\n"})}),"\n",(0,a.jsx)(n.h2,{id:"matplot-track",children:"Matplot Track"}),"\n",(0,a.jsx)(n.p,{children:"A matplot (also called a line plot) displays multiple numerical tracks on the same X and Y axes to easily compare datasets. Data is plotted as curves instead of bar plots."}),"\n",(0,a.jsx)(n.p,{children:"To use matplot, choose more than 1 numerical tracks:"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"image",src:s(1468).A+"",width:"972",height:"1056"})}),"\n",(0,a.jsxs)(n.p,{children:["Right click, and choose ",(0,a.jsx)(n.em,{children:"Apply matplot"})," button, The new matplot track will be shown:"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"image",src:s(2151).A+"",width:"826",height:"520"})}),"\n",(0,a.jsx)(n.p,{children:"and it also supports many configurations:"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"image",src:s(6366).A+"",width:"858",height:"774"})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8822:(e,n,s)=>{s.d(n,{A:()=>r});const r=s.p+"assets/images/dynseq-b11dcaaf1b561a29113899da42799037.png"},9886:(e,n,s)=>{s.d(n,{A:()=>r});const r=s.p+"assets/images/gs3-40c82db586e194283861de5a3701d57a.png"}}]);